### YamlMime:Yaml
# ms.openlocfilehash: 799f9738ace40f85fae98e28f6c679d1b385e672
# ms.sourcegitcommit: 30b83f324396700a9f03c4d42aa5ae0721fb69b9
# ms.translationtype: HT
# ms.contentlocale: zh-CN
# ms.lasthandoff: 06/21/2019
# ms.locfileid: "67336645"
pool:
  vmImage: Ubuntu-16.04
  demands:
  - npm
variables:
  buildConfiguration: Release
  wwwrootDir: Tailspin.SpaceGame.Web/wwwroot
  dotnetSdkVersion: 2.1.505
steps:
- task: DotNetCoreInstaller@0
  displayName: Use .NET Core SDK $(dotnetSdkVersion)
  inputs:
    version: $(dotnetSdkVersion)
- task: Npm@1
  displayName: Run npm install
  inputs:
    verbose: false
- script: ./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)
  displayName: Compile Sass assets
- task: gulp@1
  displayName: Run gulp tasks
- script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: Write build info
  workingDirectory: $(wwwrootDir)
- task: DotNetCoreCLI@2
  displayName: Restore project dependencies
  inputs:
    command: restore
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build the project - $(buildConfiguration)
  inputs:
    command: build
    arguments: --no-restore --configuration $(buildConfiguration)
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Publish the project - $(buildConfiguration)
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)
    zipAfterPublish: true
- task: PublishBuildArtifacts@1
  displayName: Run npm install
  inputs:
    verbose: false
- script: ./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)
  displayName: Compile Sass assets
- task: gulp@1
  displayName: Run gulp tasks
- script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: Write build info
  buildConfiguration: Release
  wwwrootDir: Tailspin.SpaceGame.Web/wwwroot
  dotnetSdkVersion: 2.1.505
steps:
- task: DotNetCoreInstaller@0
  displayName: Use .NET Core SDK $(dotnetSdkVersion)
  inputs:
    version: $(dotnetSdkVersion)
- task: Npm@1
  displayName: Run npm install
  inputs:
    verbose: false
- script: ./node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)
  displayName: Compile Sass assets
- task: gulp@1
  displayName: Run gulp tasks
- script: echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: Write build info
  workingDirectory: $(wwwrootDir)
- task: DotNetCoreCLI@2
  displayName: Restore project dependencies
  inputs:
    command: restore
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Build the project - $(buildConfiguration)
  inputs:
    command: build
    arguments: --no-restore --configuration $(buildConfiguration)
    projects: '**/*.csproj'
- task: DotNetCoreCLI@2
  displayName: Publish the project - $(buildConfiguration)
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)
    zipAfterPublish: true
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()